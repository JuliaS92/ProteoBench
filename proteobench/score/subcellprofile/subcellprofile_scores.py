import json
from io import StringIO

import domaps


def json_download(sd: domaps.SpatialDataSet) -> StringIO:
    """
    Create the JSON download file for the analysed datasets.
    """
    sio = StringIO()
    json.dump(sd.analysed_datasets_dict, sio, indent=4, sort_keys=True)
    sio.seek(0)
    return sio


class Subcellprofile_Scores:
    def __init__(self):
        self.sd: domaps.SpatialDataSet = None
        self.sdc: domaps.SpatialDataSetComparison = None

    def generate_SpatialDataSet(
        self,
        content: StringIO,
        settings: dict,
    ) -> None:
        """
        Generate a SpatialDataset object from the content and settings.

        Input for this function should be generated by the io module.
        """
        sd = domaps.SpatialDataSet.from_settings(settings)
        sd.run_pipeline(content=content)
        self.sd = sd

    def write_AnalysedDatasets(self) -> StringIO:
        """
        Write the analysed datasets to a StringIO object.
        """
        return json_download(self.sd)

    def run_SpatialDataSetComparison(self):
        """
        Generate a SpatialDataSetComparison object from the SpatialDataSet object.
        """
        self.sdc = domaps.SpatialDataSetComparison()
        self.sdc.json_dict = self.sd.analysed_datasets_dict
        self.sdc.read_jsonFile()
        self.sdc.calc_biological_precision()
        self.sdc.calculate_global_scatter(metric="manhattan distance to average profile", consolidation="average")
